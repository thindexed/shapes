{
  "draw2d": [
    {
      "type": "shape_designer.figure.PolyRect",
      "id": "e92ac7a1-d149-90c6-1281-23d32bf22f9d",
      "x": 7960,
      "y": 7958.53864453125,
      "width": 80,
      "height": 80,
      "alpha": 1,
      "selectable": true,
      "draggable": true,
      "angle": 0,
      "userData": {
        "name": "Rectangle",
        "baseClass": "draw2d.SetFigure",
        "code": "/**\n * Generated Code for the Draw2D touch HTML5 lib.\n * File will be generated if you save the *.shape file.\n *\n * by 'Draw2D Shape Designer'\n *\n * Custom JS code to tweak the standard behaviour of the generated\n * shape. add your custom code and event handler here.\n *\n * Looks disconcerting - extending my own class. But this is a good method to\n * merge basic code and override them with custom methods.\n */\ntestShape = testShape.extend({\n\n    init: function(attr, setter, getter){\n        this._super(attr, setter, getter);\n        this.worker= null;\n        this.tmpCanvas = null;\n        this.tmpContext = null;\n        this.getInputPort(\"input_port1\").setSemanticGroup(\"Image\");\n        this.getOutputPort(\"output_port1\").setSemanticGroup(\"Image\");\n    },\n\n    /**\n     *  Called by the simulator for every calculation\n     *  loop\n     *  @param {Object} context context where objects can store or handover global variables to other objects.\n     *  @required\n     **/\n    calculate:function( context)\n    {\n        var img = this.getInputPort(\"input_port1\").getValue();\n        var adjustment = this.getInputPort(\"input_port2\").getValue();\n        if(img instanceof HTMLImageElement && this.worker!==null){\n            var imageData = this.imageToData(img);\n            // Push it to the WebWorker with \"Transferable Objects\"\n            // Passing data by reference instead of structure clone\n            //\n            this.worker.postMessage({imageData: imageData,adjustment: adjustment}, [imageData.data.buffer]);\n        }\n    },\n\n\n    /**\n     *  Called if the simulation mode is starting\n     *  @required\n     **/\n    onStart:function( context )\n    {\n        // the method which runs as WebWorker\n        //\n        var workerFunction = function(event){\n            var imageData = event.data.imageData;\n            var adjustment = event.data.adjustment; // 0..5\n            \n            var pixels = imageData.data;\n            for( let x = 0; x < pixels.length; x += 4 ) {\n                let red = pixels[x];\n                let green = pixels[x + 1];\n                let blue = pixels[x + 2];\n\n                //Red channel\n                red /= 255;\n                red -= 0.5;\n                red *= adjustment;\n                red += 0.5;\n                red *= 255;\n\n                //Green channel\n                green /= 255;\n                green -= 0.5;\n                green *= adjustment;\n                green += 0.5;\n                green *= 255;\n\n                //Blue channel\n                blue /= 255;\n                blue -= 0.5;\n                blue *= adjustment;\n                blue += 0.5;\n                blue *= 255;\n\n                pixels[x]     = red < 0 ? 0 : red > 255 ? 255 : red;\n                pixels[x + 1] = green < 0 ? 0 : green > 255 ? 255 : green;\n                pixels[x + 2] = blue < 0 ? 0 : blue > 255 ? 255 : blue;\n            }\n            self.postMessage(imageData, [imageData.data.buffer]);\n        };\n        \n        // the method which receives the WebWorker result\n        //\n       var receiverFunction = (event) => {\n            var imageData = event.data;\n            this.tmpContext.putImageData(imageData,0,0);\n            var image = new Image();\n            image.onload = () => {\n                this.getOutputPort(\"output_port1\").setValue(image);\n            }\n            image.src = this.tmpCanvas.toDataURL();\n        };\n        \n        // convert a js function to a WebWorker\n        //\n        this.worker = this.createWorker(workerFunction);\n        this.worker.onmessage = receiverFunction\n    },\n\n    /**\n     *  Called if the simulation mode is stopping\n     *  @required\n     **/\n    onStop:function( context )\n    {\n        if(this.worker) this.worker.terminate();\n        delete this.worker;\n        delete this.tmpContext;\n        delete this.tmpCanvas;\n        this.worker = null;\n        this.tmpCanvas = null;\n        this.tmpContext = null;\n    },\n    \n\n    /**\n     *  Helper function to dynamically create Web Workers.\n     */\n    createWorker: function(fn) {\n        var blob = new Blob([\"self.onmessage = \", fn.toString()], {\n           type: \"text/javascript\"\n        });\n        var url = window.URL.createObjectURL(blob);\n        return new Worker(url);\n    },\n    \n    imageToData: function(image){\n        var width = image.naturalWidth;\n        var height= image.naturalHeight;\n\n        if(this.tmpContext !==null && this.tmpContext.width!== width){\n            delete this.tmpContext;\n            delete this.tmpCanvas;\n            this.tmpCanvas = null;\n            this.tmpContext = null;\n        }\n\n        // convert the HTMLImageElement to an ImageData object. Required for the WebWorker\n        //\n        if(this.tmpContext === null ) {\n            this.tmpCanvas = document.createElement('canvas');\n            this.tmpCanvas.width = width;\n            this.tmpCanvas.height = height;\n            this.tmpContext = this.tmpCanvas.getContext('2d');\n        }\n        this.tmpContext.drawImage(image, 0, 0, width, height);\n        return this.tmpContext.getImageData(0, 0, width, height);\n    }\n});",
        "markdown": "## Full Adder\n\nFull adder is developed to overcome the drawback of \nHalf Adder circuit. It can add two one-bit numbers \nA and B, and carry c. The full adder is a three \ninput and two output combinational circuit.\n\n\n\n|  A    |    B    |  Cin     |    S    |    C   |\n|:-----:|:-------:|:--------:|:--------:|:-------|\n|   0   |    0    |     0    |     0    |     0  |\n|   0   |    0    |     1    |     1    |     0  |\n|   0   |    1    |     0    |     1    |     0  |\n|   0   |    1    |     1    |     0    |     1  |\n|   1   |    0    |     0    |     0    |     1  |\n|   1   |    0    |     1    |     0    |     1  |\n|   1   |    1    |     0    |     0    |     1  |\n|   1   |    1    |     1    |     0    |     1  |\n",
        "type": "Output",
        "direction": 1
      },
      "cssClass": "shape_designer_figure_PolyRect",
      "ports": [],
      "bgColor": "rgba(255,255,255,1)",
      "color": "rgba(48,48,48,1)",
      "stroke": 1,
      "radius": 3,
      "dasharray": null,
      "vertices": [
        {
          "x": 7960,
          "y": 7958.53864453125
        },
        {
          "x": 8040,
          "y": 7958.53864453125
        },
        {
          "x": 8040,
          "y": 8038.53864453125
        },
        {
          "x": 7960,
          "y": 8038.53864453125
        }
      ],
      "blur": 0,
      "filters": [
        {
          "name": "shape_designer.filter.PositionFilter"
        },
        {
          "name": "shape_designer.filter.SizeFilter"
        },
        {
          "name": "shape_designer.filter.StrokeFilter"
        },
        {
          "name": "shape_designer.filter.FillColorFilter"
        },
        {
          "name": "shape_designer.filter.RadiusFilter"
        }
      ]
    },
    {
      "type": "shape_designer.figure.ExtLine",
      "id": "c12172f4-b838-208e-1441-334b1ac64d31",
      "alpha": 1,
      "selectable": true,
      "draggable": true,
      "angle": 0,
      "userData": {
        "name": "Line"
      },
      "cssClass": "shape_designer_figure_ExtLine",
      "stroke": 1,
      "color": "rgba(0,0,0,1)",
      "outlineStroke": 0,
      "outlineColor": "rgba(0,0,0,0)",
      "policy": "draw2d.policy.line.VertexSelectionFeedbackPolicy",
      "vertex": [
        {
          "x": 7969.377490534403,
          "y": 8017.1677450976595
        },
        {
          "x": 7965.757806182407,
          "y": 8017.569139990464
        },
        {
          "x": 7960.407552000004,
          "y": 8024.050178531257
        }
      ],
      "router": "draw2d.layout.connection.VertexRouter",
      "radius": "",
      "filters": [
        {
          "name": "shape_designer.filter.StrokeFilter"
        }
      ]
    },
    {
      "type": "shape_designer.figure.ExtPort",
      "id": "509f0f7f-9c3d-3b54-d79c-877493488fa7",
      "x": 7953.5,
      "y": 7994.02664453125,
      "width": 10,
      "height": 10,
      "alpha": 1,
      "selectable": true,
      "draggable": true,
      "angle": 0,
      "userData": {
        "name": "input_port1",
        "type": "Input",
        "direction": 3,
        "fanout": null
      },
      "cssClass": "shape_designer_figure_ExtPort",
      "ports": [],
      "bgColor": "rgba(55,177,222,1)",
      "color": "rgba(27,27,27,1)",
      "stroke": 1,
      "dasharray": null,
      "filters": [
        {
          "name": "shape_designer.filter.PositionFilter"
        },
        {
          "name": "shape_designer.filter.FanoutFilter"
        },
        {
          "name": "shape_designer.filter.PortDirectionFilter"
        },
        {
          "name": "shape_designer.filter.PortTypeFilter"
        }
      ]
    },
    {
      "type": "shape_designer.figure.ExtPort",
      "id": "9d29ea24-7652-4aae-625a-a9c7cb87615c",
      "x": 7953.5,
      "y": 8019.02385546875,
      "width": 10,
      "height": 10,
      "alpha": 1,
      "selectable": true,
      "draggable": true,
      "angle": 0,
      "userData": {
        "name": "input_port2",
        "type": "Input",
        "direction": 3,
        "fanout": null
      },
      "cssClass": "shape_designer_figure_ExtPort",
      "ports": [],
      "bgColor": "rgba(55,177,222,1)",
      "color": "rgba(27,27,27,1)",
      "stroke": 1,
      "dasharray": null,
      "filters": [
        {
          "name": "shape_designer.filter.PositionFilter"
        },
        {
          "name": "shape_designer.filter.FanoutFilter"
        },
        {
          "name": "shape_designer.filter.PortDirectionFilter"
        },
        {
          "name": "shape_designer.filter.PortTypeFilter"
        }
      ]
    },
    {
      "type": "shape_designer.figure.ExtPort",
      "id": "b832e06d-477d-4ffc-697b-d19504dc9aad",
      "x": 8036.492,
      "y": 7994.03864453125,
      "width": 10,
      "height": 10,
      "alpha": 1,
      "selectable": true,
      "draggable": true,
      "angle": 0,
      "userData": {
        "name": "output_port1",
        "type": "Output",
        "direction": 1,
        "fanout": 20
      },
      "cssClass": "shape_designer_figure_ExtPort",
      "ports": [],
      "bgColor": "rgba(55,177,222,1)",
      "color": "rgba(27,27,27,1)",
      "stroke": 1,
      "dasharray": null,
      "filters": [
        {
          "name": "shape_designer.filter.PositionFilter"
        },
        {
          "name": "shape_designer.filter.FanoutFilter"
        },
        {
          "name": "shape_designer.filter.PortDirectionFilter"
        },
        {
          "name": "shape_designer.filter.PortTypeFilter"
        }
      ]
    },
    {
      "type": "shape_designer.figure.PolyRect",
      "id": "60a2dd97-1f28-c39f-3767-73fb56280eae",
      "x": 7964.5,
      "y": 7962.91861253125,
      "width": 71,
      "height": 48,
      "alpha": 1,
      "selectable": true,
      "draggable": true,
      "angle": 0,
      "userData": {
        "name": "Rectangle"
      },
      "cssClass": "shape_designer_figure_PolyRect",
      "ports": [],
      "bgColor": "rgba(199,199,199,1)",
      "color": "rgba(48,48,48,1)",
      "stroke": 1,
      "radius": 4,
      "dasharray": null,
      "vertices": [
        {
          "x": 7964.5,
          "y": 7962.91861253125
        },
        {
          "x": 8035.5,
          "y": 7962.91861253125
        },
        {
          "x": 8035.5,
          "y": 8010.91861253125
        },
        {
          "x": 7964.5,
          "y": 8010.91861253125
        }
      ],
      "blur": 0,
      "filters": [
        {
          "name": "shape_designer.filter.PositionFilter"
        },
        {
          "name": "shape_designer.filter.SizeFilter"
        },
        {
          "name": "shape_designer.filter.StrokeFilter"
        },
        {
          "name": "shape_designer.filter.FillColorFilter"
        },
        {
          "name": "shape_designer.filter.RadiusFilter"
        }
      ]
    },
    {
      "type": "shape_designer.figure.ExtLabel",
      "id": "08ecbf02-d0c7-c225-b373-3d46a828f568",
      "x": 7969.466176000004,
      "y": 8017.52385546875,
      "width": 58.03125,
      "height": 21.375,
      "alpha": 1,
      "selectable": true,
      "draggable": true,
      "angle": 0,
      "userData": {
        "name": "Label"
      },
      "cssClass": "shape_designer_figure_ExtLabel",
      "ports": [],
      "bgColor": "rgba(0,0,0,0)",
      "color": "rgba(27,27,27,1)",
      "stroke": 0,
      "radius": 0,
      "dasharray": null,
      "text": "Contrast",
      "outlineStroke": 0,
      "outlineColor": "rgba(0,0,0,0)",
      "fontSize": 14,
      "fontColor": "rgba(8,8,8,1)",
      "fontFamily": null,
      "editor": "LabelInplaceEditor",
      "filters": [
        {
          "name": "shape_designer.filter.PositionFilter"
        },
        {
          "name": "shape_designer.filter.FontSizeFilter"
        },
        {
          "name": "shape_designer.filter.FontColorFilter"
        }
      ]
    },
    {
      "type": "shape_designer.figure.PolyCircle",
      "id": "f6c602d3-cc44-24dd-49a7-c0955b0e114e",
      "x": 7990.136293579453,
      "y": 7968.038168110707,
      "width": 16,
      "height": 16,
      "alpha": 1,
      "selectable": true,
      "draggable": true,
      "angle": 0,
      "userData": {
        "name": "Circle"
      },
      "cssClass": "shape_designer_figure_PolyCircle",
      "ports": [],
      "bgColor": "rgba(240,36,74,1)",
      "color": "rgba(27,27,27,1)",
      "stroke": 0,
      "radius": 0,
      "dasharray": null,
      "blur": 0,
      "filters": [
        {
          "name": "shape_designer.filter.PositionFilter"
        },
        {
          "name": "shape_designer.filter.SizeFilter"
        },
        {
          "name": "shape_designer.filter.FillColorFilter"
        }
      ]
    },
    {
      "type": "shape_designer.figure.ExtPolygon",
      "id": "6eac5a02-2b2a-f16d-f87b-d71700eb0679",
      "x": 7988.136293579453,
      "y": 7989.41861253125,
      "width": 21,
      "height": 19,
      "alpha": 1,
      "selectable": true,
      "draggable": true,
      "angle": 0,
      "userData": {
        "name": "Rectangle"
      },
      "cssClass": "shape_designer_figure_PolyRect",
      "ports": [],
      "bgColor": "rgba(232,34,71,1)",
      "color": "rgba(48,48,48,1)",
      "stroke": 0,
      "radius": 0,
      "dasharray": null,
      "vertices": [
        {
          "x": 7988.136293579453,
          "y": 8008.41861253125
        },
        {
          "x": 8009.136293579453,
          "y": 8008.41861253125
        },
        {
          "x": 8007.66478056058,
          "y": 7994.02865380034
        },
        {
          "x": 8007.264814642871,
          "y": 7993.089342372369
        },
        {
          "x": 8006.611721664993,
          "y": 7992.20800631275
        },
        {
          "x": 8005.725345526597,
          "y": 7991.411424571681
        },
        {
          "x": 8004.63261831812,
          "y": 7990.723800882273
        },
        {
          "x": 8003.366742002849,
          "y": 7990.1660283423735
        },
        {
          "x": 8001.966179592053,
          "y": 7989.755054588366
        },
        {
          "x": 8000.473486465869,
          "y": 7989.503366849801
        },
        {
          "x": 7998.934017349596,
          "y": 7989.41861253125
        },
        {
          "x": 7997.394548233321,
          "y": 7989.503366849801
        },
        {
          "x": 7995.901855107136,
          "y": 7989.755054588366
        },
        {
          "x": 7994.501292696339,
          "y": 7990.1660283423735
        },
        {
          "x": 7993.235416381065,
          "y": 7990.723800882273
        },
        {
          "x": 7992.142689172592,
          "y": 7991.411424571681
        },
        {
          "x": 7991.256313034195,
          "y": 7992.20800631275
        },
        {
          "x": 7990.6032200563195,
          "y": 7993.089342372369
        },
        {
          "x": 7990.203254138609,
          "y": 7994.02865380034
        }
      ],
      "blur": 0,
      "filters": [
        {
          "name": "shape_designer.filter.PositionFilter"
        },
        {
          "name": "shape_designer.filter.SizeFilter"
        },
        {
          "name": "shape_designer.filter.FillColorFilter"
        }
      ]
    },
    {
      "type": "shape_designer.figure.ExtLabel",
      "id": "2eac019a-c713-c8ea-ae92-17abd55d6a43",
      "x": 7968,
      "y": 8005.52664453125,
      "width": 56.9375,
      "height": 21.21875,
      "alpha": 1,
      "selectable": true,
      "draggable": true,
      "angle": 0,
      "userData": {
        "name": "Label"
      },
      "cssClass": "shape_designer_figure_ExtLabel",
      "ports": [],
      "bgColor": "rgba(0,0,0,0)",
      "color": "rgba(27,27,27,1)",
      "stroke": 0,
      "radius": 0,
      "dasharray": null,
      "text": "adjustment",
      "outlineStroke": 0,
      "outlineColor": "rgba(0,0,0,0)",
      "fontSize": 8,
      "fontColor": "rgba(8,8,8,1)",
      "fontFamily": null,
      "editor": "LabelInplaceEditor",
      "filters": [
        {
          "name": "shape_designer.filter.PositionFilter"
        },
        {
          "name": "shape_designer.filter.FontSizeFilter"
        },
        {
          "name": "shape_designer.filter.FontColorFilter"
        }
      ]
    },
    {
      "type": "shape_designer.figure.ExtPolygon",
      "id": "8ba0c773-a1f9-419a-a08a-812260337f1a",
      "x": 7999.9291840000005,
      "y": 7963.41861253125,
      "width": 35,
      "height": 47,
      "alpha": 1,
      "selectable": true,
      "draggable": true,
      "angle": 0,
      "userData": {
        "name": "Rectangle"
      },
      "cssClass": "shape_designer_figure_PolyRect",
      "ports": [],
      "bgColor": "rgba(250,250,250,1)",
      "color": "rgba(48,48,48,1)",
      "stroke": 0,
      "radius": 4,
      "dasharray": null,
      "vertices": [
        {
          "x": 7999.9291840000005,
          "y": 8010.41861253125
        },
        {
          "x": 8034.9291840000005,
          "y": 8010.41861253125
        },
        {
          "x": 8034.9291840000005,
          "y": 7963.41861253125
        },
        {
          "x": 7999.9291840000005,
          "y": 7963.41861253125
        },
        {
          "x": 7999.9291840000005,
          "y": 8010.41861253125
        }
      ],
      "blur": 0,
      "filters": [
        {
          "name": "shape_designer.filter.PositionFilter"
        },
        {
          "name": "shape_designer.filter.SizeFilter"
        },
        {
          "name": "shape_designer.filter.FillColorFilter"
        },
        {
          "name": "shape_designer.filter.RadiusFilter"
        }
      ]
    },
    {
      "type": "shape_designer.figure.ExtPolygon",
      "id": "5b6e9c69-63d9-b541-81b1-8aec11093f79",
      "x": 8000.348671999999,
      "y": 7989.41861253125,
      "width": 8.803056947199366,
      "height": 19,
      "alpha": 1,
      "selectable": true,
      "draggable": true,
      "angle": 0,
      "userData": {
        "name": "Rectangle"
      },
      "cssClass": "shape_designer_figure_PolyRect",
      "ports": [],
      "bgColor": "rgba(143,21,44,1)",
      "color": "rgba(48,48,48,1)",
      "stroke": 0,
      "radius": 0,
      "dasharray": null,
      "vertices": [
        {
          "x": 8000.348671999999,
          "y": 8008.41861253125
        },
        {
          "x": 8009.1517289471985,
          "y": 8008.41861253125
        },
        {
          "x": 8007.960504122397,
          "y": 7994.02865380034
        },
        {
          "x": 8007.636722189012,
          "y": 7993.089342372369
        },
        {
          "x": 8007.108027873589,
          "y": 7992.20800631275
        },
        {
          "x": 8006.390485285361,
          "y": 7991.411424571681
        },
        {
          "x": 8005.50589659279,
          "y": 7990.723800882273
        },
        {
          "x": 8004.4811395756615,
          "y": 7990.1660283423735
        },
        {
          "x": 8003.347350957398,
          "y": 7989.755054588366
        },
        {
          "x": 8002.138980331439,
          "y": 7989.503366849801
        },
        {
          "x": 8000.89274342779,
          "y": 7989.41861253125
        },
        {
          "x": 8000.348671999999,
          "y": 7989.455613845343
        },
        {
          "x": 8000.348671999999,
          "y": 8008.41861253125
        }
      ],
      "blur": 0,
      "filters": [
        {
          "name": "shape_designer.filter.PositionFilter"
        },
        {
          "name": "shape_designer.filter.SizeFilter"
        },
        {
          "name": "shape_designer.filter.FillColorFilter"
        }
      ]
    },
    {
      "type": "shape_designer.figure.ExtPolygon",
      "id": "c77630c2-4fd4-2e7f-edf1-912692694ac9",
      "x": 7999.9291840000005,
      "y": 7968.038168110707,
      "width": 8.331258059449283,
      "height": 16,
      "alpha": 1,
      "selectable": true,
      "draggable": true,
      "angle": 0,
      "userData": {
        "name": "Circle"
      },
      "cssClass": "shape_designer_figure_PolyCircle",
      "ports": [],
      "bgColor": "rgba(163,24,50,1)",
      "color": "rgba(27,27,27,1)",
      "stroke": 0,
      "radius": 0,
      "dasharray": null,
      "vertices": [
        {
          "x": 7999.9291840000005,
          "y": 7984.009186785804
        },
        {
          "x": 8000.26044205945,
          "y": 7984.038168110707
        },
        {
          "x": 8001.649627480785,
          "y": 7983.916630134805
        },
        {
          "x": 8002.996603206055,
          "y": 7983.555709076994
        },
        {
          "x": 8004.26044205945,
          "y": 7982.966371340983
        },
        {
          "x": 8005.402742936943,
          "y": 7982.166523655659
        },
        {
          "x": 8006.388797604402,
          "y": 7981.1804689882
        },
        {
          "x": 8007.188645289725,
          "y": 7980.038168110707
        },
        {
          "x": 8007.777983025737,
          "y": 7978.774329257312
        },
        {
          "x": 8008.1389040835475,
          "y": 7977.427353532043
        },
        {
          "x": 8008.26044205945,
          "y": 7976.038168110707
        },
        {
          "x": 8008.1389040835475,
          "y": 7974.648982689372
        },
        {
          "x": 8007.777983025737,
          "y": 7973.3020069641025
        },
        {
          "x": 8007.188645289725,
          "y": 7972.038168110707
        },
        {
          "x": 8006.388797604402,
          "y": 7970.895867233215
        },
        {
          "x": 8005.402742936943,
          "y": 7969.909812565756
        },
        {
          "x": 8004.26044205945,
          "y": 7969.109964880432
        },
        {
          "x": 8002.996603206055,
          "y": 7968.52062714442
        },
        {
          "x": 8001.649627480785,
          "y": 7968.15970608661
        },
        {
          "x": 8000.26044205945,
          "y": 7968.038168110707
        },
        {
          "x": 7999.9291840000005,
          "y": 7968.067149435611
        },
        {
          "x": 7999.9291840000005,
          "y": 7984.009186785804
        }
      ],
      "blur": 0,
      "filters": [
        {
          "name": "shape_designer.filter.PositionFilter"
        },
        {
          "name": "shape_designer.filter.SizeFilter"
        },
        {
          "name": "shape_designer.filter.FillColorFilter"
        }
      ]
    },
    {
      "type": "shape_designer.figure.ExtLine",
      "id": "b46a83ff-9d4b-387b-06ad-54262e1a42a8",
      "alpha": 1,
      "selectable": true,
      "draggable": true,
      "angle": 0,
      "userData": {
        "name": "Line"
      },
      "cssClass": "shape_designer_figure_ExtLine",
      "stroke": 2,
      "color": "rgba(0,0,0,1)",
      "outlineStroke": 0,
      "outlineColor": "rgba(0,0,0,0)",
      "policy": "draw2d.policy.line.VertexSelectionFeedbackPolicy",
      "vertex": [
        {
          "x": 7999.586528000003,
          "y": 7963.721810531252
        },
        {
          "x": 7999.848671999999,
          "y": 8010.907730531252
        }
      ],
      "router": "draw2d.layout.connection.VertexRouter",
      "radius": "",
      "filters": [
        {
          "name": "shape_designer.filter.StrokeFilter"
        }
      ]
    }
  ]
}