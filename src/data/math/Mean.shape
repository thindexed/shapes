{
  "draw2d": [
    {
      "type": "shape_designer.figure.PolyRect",
      "id": "b817ebc3-6f4d-2fe0-4f7d-59772a488ccc",
      "x": 7980,
      "y": 7979.84375,
      "width": 40,
      "height": 40,
      "alpha": 1,
      "selectable": true,
      "draggable": true,
      "angle": 0,
      "userData": {
        "name": "Rectangle",
        "baseClass": "draw2d.SetFigure",
        "code": "/**\n * Generated Code for the Draw2D touch HTML5 lib.\n * File will be generated if you save the *.shape file.\n *\n * by 'Draw2D Shape Designer'\n *\n * Custom JS code to tweak the standard behaviour of the generated\n * shape. add your custom code and event handler here.\n *\n * Looks disconcerting - extending my own class. But this is a good method to\n * merge basic code and override them with custom methods.\n */\ntestShape = testShape.extend({\n\n    init: function(attr, setter, getter){\n        this._super(attr, setter, getter);\n\n        this.total   = 0;    // the running total\n        this.average = 0;    // the average\n        this.readings = []; \n        this.readIndex = 0;\n        this.numReadings =0;\n        \n        this.on(\"change:userData.numReadings\",(emitter, event)=>{\n            this.numReadings = parseInt(event.value);\n            this.readings = []; \n            this.total =0;\n            this.average = 0;\n            this.readings.length = this.numReadings;\n            this.pointer=0;\n            this.readIndex = 0;\n            this.readings.fill(0)\n        });\n        \n        this.attr({\n            resizeable:false,\n            \"userData.numReadings\":10\n        });\n\n        this.installEditPolicy(new draw2d.policy.figure.AntSelectionFeedbackPolicy());\n    },\n\n    /**\n     *  Called by the simulator for every calculation\n     *  loop\n     *  @param {Object} context context where objects can store or handover global variables to other objects.\n     *  @required\n     **/\n    calculate:function( context)\n    {\n        this.total = this.total - this.readings[this.readIndex];\n        this.readings[this.readIndex] = this.getInputPort(0).getValue() || 0;\n        this.total = this.total + this.readings[this.readIndex];\n        this.readIndex = (this.readIndex+1)%this.readings.length;\n        this.average = parseInt((this.total / this.readings.length)*1000)/1000;\n        this.getOutputPort(0).setValue(this.average);\n    },\n\n    /**\n     *  Called if the simulation mode is starting\n     *  @required\n     **/\n    onStart:function( context )\n    {\n    },\n\n    /**\n     *  Called if the simulation mode is stopping\n     *  @required\n     **/\n    onStop:function( context )\n    {\n    },\n    \n    getParameterSettings:function()\n    {\n        return [\n        {\n            name:\"numReadings\",\n            label:\"Number of Readings for the average\",\n            property:{\n                type: \"integer\",\n                min: 10,\n                max: 150,\n                increment:1\n        }\n        }];\n    }\n});"
      },
      "cssClass": "shape_designer_figure_PolyRect",
      "ports": [],
      "bgColor": "rgba(255,255,255,1)",
      "color": "rgba(48,48,48,1)",
      "stroke": 1,
      "radius": 2,
      "dasharray": null,
      "vertices": [
        {
          "x": 7980,
          "y": 7979.84375
        },
        {
          "x": 8020,
          "y": 7979.84375
        },
        {
          "x": 8020,
          "y": 8019.84375
        },
        {
          "x": 7980,
          "y": 8019.84375
        }
      ],
      "blur": 0,
      "filters": [
        {
          "name": "shape_designer.filter.PositionFilter"
        },
        {
          "name": "shape_designer.filter.SizeFilter"
        },
        {
          "name": "shape_designer.filter.StrokeFilter"
        },
        {
          "name": "shape_designer.filter.FillColorFilter"
        },
        {
          "name": "shape_designer.filter.RadiusFilter"
        }
      ]
    },
    {
      "type": "shape_designer.figure.ExtPort",
      "id": "b79e7ada-3620-8711-3970-397905057893",
      "x": 7974,
      "y": 7996.025390625,
      "width": 10,
      "height": 10,
      "alpha": 1,
      "selectable": true,
      "draggable": true,
      "angle": 0,
      "userData": {
        "name": "input_port1",
        "type": "Input",
        "direction": 3,
        "fanout": 20
      },
      "cssClass": "shape_designer_figure_ExtPort",
      "ports": [],
      "bgColor": "rgba(55,177,222,1)",
      "color": "rgba(27,27,27,1)",
      "stroke": 1,
      "dasharray": null,
      "filters": [
        {
          "name": "shape_designer.filter.PositionFilter"
        },
        {
          "name": "shape_designer.filter.FanoutFilter"
        },
        {
          "name": "shape_designer.filter.PortDirectionFilter"
        },
        {
          "name": "shape_designer.filter.PortTypeFilter"
        }
      ]
    },
    {
      "type": "shape_designer.figure.ExtPort",
      "id": "244e6441-6bfe-8dde-425b-781c497bd375",
      "x": 8017,
      "y": 7995.84375,
      "width": 10,
      "height": 10,
      "alpha": 1,
      "selectable": true,
      "draggable": true,
      "angle": 0,
      "userData": {
        "name": "output_port1",
        "type": "Output",
        "direction": 1,
        "fanout": 20
      },
      "cssClass": "shape_designer_figure_ExtPort",
      "ports": [],
      "bgColor": "rgba(55,177,222,1)",
      "color": "rgba(27,27,27,1)",
      "stroke": 1,
      "dasharray": null,
      "filters": [
        {
          "name": "shape_designer.filter.PositionFilter"
        },
        {
          "name": "shape_designer.filter.FanoutFilter"
        },
        {
          "name": "shape_designer.filter.PortDirectionFilter"
        },
        {
          "name": "shape_designer.filter.PortTypeFilter"
        }
      ]
    },
    {
      "type": "shape_designer.figure.ExtLabel",
      "id": "3879aa75-79c4-2de0-c346-ae22ac270bee",
      "x": 7988,
      "y": 7986.234375,
      "width": 28.34375,
      "height": 21.375,
      "alpha": 1,
      "selectable": true,
      "draggable": true,
      "angle": 0,
      "userData": {
        "name": "Label"
      },
      "cssClass": "shape_designer_figure_ExtLabel",
      "ports": [],
      "bgColor": "rgba(0,0,0,0)",
      "color": "rgba(27,27,27,1)",
      "stroke": 0,
      "radius": 0,
      "dasharray": null,
      "text": "X",
      "outlineStroke": 0,
      "outlineColor": "rgba(0,0,0,0)",
      "fontSize": 23,
      "fontColor": "rgba(8,8,8,1)",
      "fontFamily": null,
      "editor": "LabelInplaceEditor",
      "filters": [
        {
          "name": "shape_designer.filter.PositionFilter"
        },
        {
          "name": "shape_designer.filter.FontSizeFilter"
        },
        {
          "name": "shape_designer.filter.FontColorFilter"
        }
      ]
    },
    {
      "type": "shape_designer.figure.ExtLine",
      "id": "eccce285-54c7-c9c7-17f8-482534119910",
      "alpha": 1,
      "selectable": true,
      "draggable": true,
      "angle": 0,
      "userData": {
        "name": "Line"
      },
      "cssClass": "shape_designer_figure_ExtLine",
      "stroke": 2,
      "color": "rgba(0,0,0,1)",
      "outlineStroke": 0,
      "outlineColor": "rgba(0,0,0,0)",
      "policy": "draw2d.policy.line.VertexSelectionFeedbackPolicy",
      "vertex": [
        {
          "x": 8008.405000000002,
          "y": 7989.552750000002
        },
        {
          "x": 8000.725000000002,
          "y": 7989.552750000002
        },
        {
          "x": 7993.045000000002,
          "y": 7989.552750000002
        },
        {
          "x": 7992.021000000002,
          "y": 7989.552750000002
        }
      ],
      "router": "draw2d.layout.connection.VertexRouter",
      "radius": "",
      "filters": [
        {
          "name": "shape_designer.filter.StrokeFilter"
        }
      ]
    }
  ]
}